// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TourProgram.DAL;

#nullable disable

namespace TourProgram.DAL.Migrations
{
    [DbContext(typeof(TourProgramDbContext))]
    [Migration("20231109120815_AddNewTable")]
    partial class AddNewTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("TourProgram.DAL.Models.AccomodationDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("BilledAmount")
                        .HasColumnType("float");

                    b.Property<double>("ClaimedAmount")
                        .HasColumnType("float");

                    b.Property<string>("ClassOfCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfCheckIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfCheckOut")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<string>("HotelCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HotelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFreeAccomodation")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfCheckIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfCheckOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpTourPlanId");

                    b.ToTable("AccomodationDetails");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.AccomodationUpload", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("AccomodationDetailsId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AccomodationDetailsId");

                    b.ToTable("AccomodationUploads");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.ActualTravelPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ClassOfCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpTourPlanId");

                    b.ToTable("ActualTravelPlans");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<long>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("TourProgram.DAL.Models.ClaimClarification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("AccomodationClarification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DAClarification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LeaveClarification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReciverId")
                        .HasColumnType("int");

                    b.Property<int>("SenderId")
                        .HasColumnType("int");

                    b.Property<string>("TransportationClarification")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpTourPlanId");

                    b.ToTable("ClaimClarifications");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.ClaimStatusCategory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClaimStatusCategorys");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(6064),
                            Description = "Pending Approval",
                            IsActive = true,
                            Name = "Pending Approval"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(6066),
                            Description = "Approved",
                            IsActive = true,
                            Name = "Approved"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(6067),
                            Description = "Finance Processing",
                            IsActive = true,
                            Name = "Finance Processing"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(6068),
                            Description = "Rejected",
                            IsActive = true,
                            Name = "Rejected"
                        });
                });

            modelBuilder.Entity("TourProgram.DAL.Models.ClaimType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClaimTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(6041),
                            IsActive = true,
                            Name = "Advance"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(6042),
                            IsActive = true,
                            Name = "Advance Claim"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(6043),
                            IsActive = true,
                            Name = "Claim"
                        });
                });

            modelBuilder.Entity("TourProgram.DAL.Models.DADetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DAAmount")
                        .HasColumnType("float");

                    b.Property<double>("DAApprovedAmount")
                        .HasColumnType("float");

                    b.Property<double>("DAPercentageAdmissible")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfWorkIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfWorkOut")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfWorkIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfWorkOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpTourPlanId");

                    b.ToTable("DADetails");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.EMPClaimProcessDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("ClaimTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpTourId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("RecipientId")
                        .HasColumnType("bigint");

                    b.Property<long>("SenderId")
                        .HasColumnType("bigint");

                    b.Property<long>("StatusId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ClaimTypeId");

                    b.HasIndex("EmpTourId");

                    b.HasIndex("StatusId");

                    b.ToTable("EMPClaimProcessDetails");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.Employee", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("BloodGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateofBirth")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JoiningDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LeavingDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.EmpProfile", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime?>("ApplicabelDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Department")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmpId")
                        .HasColumnType("bigint");

                    b.Property<string>("EmpLavel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MarkingAbbr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgPrimaryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrgUnitName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostAssignedInOrgUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostAssignedInWrapperName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ReportingOfficerId")
                        .HasColumnType("bigint");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("WrapperName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpId");

                    b.HasIndex("RoleId");

                    b.ToTable("EmpProfiles");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.EmpTourPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double?>("AccomodationEstimate")
                        .HasColumnType("float");

                    b.Property<double?>("AdvanceRequired")
                        .HasColumnType("float");

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClassOfCity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfLiquidation")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpId")
                        .HasColumnType("int");

                    b.Property<string>("Grade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdvanceLiquidated")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAdvanceRequired")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsAir")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDirectClaim")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRail")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsRoad")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsX")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsY")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsZ")
                        .HasColumnType("bit");

                    b.Property<int?>("LiquiDationBy")
                        .HasColumnType("int");

                    b.Property<int>("NoOfDays")
                        .HasColumnType("int");

                    b.Property<double?>("PaidAmount")
                        .HasColumnType("float");

                    b.Property<double?>("PaymentReferenceNo")
                        .HasColumnType("float");

                    b.Property<string>("PurposeOfTour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("TantetiveDateOfDeparture")
                        .HasColumnType("datetime2");

                    b.Property<double?>("TravelEstimateAmount")
                        .HasColumnType("float");

                    b.Property<string>("TypeOfTour")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmpTourPlans");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.FinanceDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double?>("ApprovedAmount")
                        .HasColumnType("float");

                    b.Property<long>("ClaimTypeId")
                        .HasColumnType("bigint");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLiquidation")
                        .HasColumnType("bit");

                    b.Property<double?>("LiquidationAmount")
                        .HasColumnType("float");

                    b.Property<double?>("PaidAmount")
                        .HasColumnType("float");

                    b.Property<DateTime?>("SapReferenceDateLiquidation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SapReferenceDatePaymentApproval")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SapReferenceDatePaymentProcessing")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SapReferenceNoLiquidation")
                        .HasColumnType("datetime2");

                    b.Property<string>("SapReferenceNoPaymentApproval")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SapReferenceNoPaymentProcessing")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UTRNO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UTRProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClaimTypeId");

                    b.HasIndex("EmpTourPlanId");

                    b.ToTable("FinanceDetails");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.GradeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("X")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Y")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Z")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GradeDetails");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "MD",
                            X = "Ashoka Hotel Suite",
                            Y = "90% of the rate of Ashoka Hotel Suite",
                            Z = "80% of the rate of Ashoka Hotel Suite"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "Director",
                            X = "Ashoka Hotel Suite",
                            Y = "90% of the rate of Ashoka Hotel Suite",
                            Z = "80% of the rate of Ashoka Hotel Suite"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "ED",
                            X = "10000",
                            Y = "9000",
                            Z = "7500"
                        },
                        new
                        {
                            Id = 4L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "GGM",
                            X = "10000",
                            Y = "9000",
                            Z = "7500"
                        },
                        new
                        {
                            Id = 5L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "GM",
                            X = "10000",
                            Y = "9000",
                            Z = "7500"
                        },
                        new
                        {
                            Id = 6L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "AGM",
                            X = "75000",
                            Y = "6000",
                            Z = "5000"
                        },
                        new
                        {
                            Id = 7L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "JGM",
                            X = "75000",
                            Y = "6000",
                            Z = "5000"
                        },
                        new
                        {
                            Id = 8L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "DGM",
                            X = "6000",
                            Y = "5000",
                            Z = "4000"
                        },
                        new
                        {
                            Id = 9L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "Jr.Mgr",
                            X = "3000",
                            Y = "2500",
                            Z = "2000"
                        },
                        new
                        {
                            Id = 10L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "Mgr",
                            X = "3000",
                            Y = "2500",
                            Z = "2000"
                        },
                        new
                        {
                            Id = 11L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "Sr.Exe",
                            X = "2200",
                            Y = "2000",
                            Z = "1000"
                        },
                        new
                        {
                            Id = 12L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "Exe",
                            X = "2200",
                            Y = "2000",
                            Z = "1000"
                        },
                        new
                        {
                            Id = 13L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "N5",
                            X = "1500",
                            Y = " 1300",
                            Z = "800"
                        },
                        new
                        {
                            Id = 14L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "N6",
                            X = "1500",
                            Y = "1300",
                            Z = "800"
                        },
                        new
                        {
                            Id = 15L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "N7",
                            X = "1500",
                            Y = "1300",
                            Z = "800"
                        },
                        new
                        {
                            Id = 16L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "N1",
                            X = "1000",
                            Y = "800",
                            Z = "500"
                        },
                        new
                        {
                            Id = 17L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "N2",
                            X = "1000",
                            Y = "800",
                            Z = "500"
                        },
                        new
                        {
                            Id = 18L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "N3",
                            X = "1000",
                            Y = "800",
                            Z = "500"
                        },
                        new
                        {
                            Id = 19L,
                            CreatedBy = 0L,
                            CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = false,
                            Lavel = "N4",
                            X = "1000",
                            Y = "800",
                            Z = "500"
                        });
                });

            modelBuilder.Entity("TourProgram.DAL.Models.LeaveDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("DADeductableAmount")
                        .HasColumnType("float");

                    b.Property<double?>("DADeductableApprovedAmount")
                        .HasColumnType("float");

                    b.Property<DateTime>("DateOfLeaveIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfLeaveOut")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDADeductable")
                        .HasColumnType("bit");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfLeaveIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfLeaveOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpTourPlanId");

                    b.ToTable("LeaveDetails");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.OrgClaimLimit", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("ApplicableDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApplicableYear")
                        .HasColumnType("int");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Lavel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Limit")
                        .HasColumnType("int");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrgClaimLimits");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.OtpCodeDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsOtpVerify")
                        .HasColumnType("bit");

                    b.Property<int>("OtpCode")
                        .HasColumnType("int");

                    b.Property<int>("RequestedByEmpId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Senttime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OtpCodeDetails");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.TentativeTravelPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<string>("ClassOfCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<string>("From")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("To")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourDetails")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TravelMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpTourPlanId");

                    b.ToTable("TentativeTravelPlans");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.TransportationDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double?>("ApprovedAmount")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int?>("ApprovedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ApprovedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("BilledAmount")
                        .HasColumnType("float");

                    b.Property<double>("ClaimedAmount")
                        .HasColumnType("float");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfTravelDestination")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfTravelSource")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("ModeOfTravel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remark")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfTravelDestiNation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeOfTravelSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EmpTourPlanId");

                    b.ToTable("TransportationDetails");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.TransportationUpload", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long>("TransportationDetailsId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TransportationDetailsId");

                    b.ToTable("TransportationUploads");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.UploadDocType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsBillable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UploadDocTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(5829),
                            IsActive = true,
                            IsBillable = true,
                            Name = "Travel"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 11, 9, 17, 38, 15, 87, DateTimeKind.Local).AddTicks(5841),
                            IsActive = true,
                            IsBillable = true,
                            Name = "Accommodation"
                        });
                });

            modelBuilder.Entity("TourProgram.DAL.Models.UploadDocument", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("PathUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UploadTypeDetailsId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UploadTypeDetailsId");

                    b.ToTable("UploadDocuments");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.UploadTypeDetail", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"), 1L, 1);

                    b.Property<double>("Amount")
                        .HasColumnType("float");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("EmpTourPlanId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("UploadTypeId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("EmpTourPlanId");

                    b.HasIndex("UploadTypeId");

                    b.ToTable("UploadTypeDetails");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.UserRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourProgram.DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TourProgram.DAL.Models.AccomodationDetail", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.AccomodationUpload", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.AccomodationDetail", "AccomodationDetail")
                        .WithMany()
                        .HasForeignKey("AccomodationDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AccomodationDetail");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.ActualTravelPlan", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.ApplicationUser", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.ClaimClarification", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.DADetail", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.EMPClaimProcessDetail", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.ClaimType", "ClaimType")
                        .WithMany()
                        .HasForeignKey("ClaimTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourProgram.DAL.Models.ClaimStatusCategory", "ClaimStatusCategory")
                        .WithMany()
                        .HasForeignKey("StatusId")
                        .IsRequired();

                    b.Navigation("ClaimStatusCategory");

                    b.Navigation("ClaimType");

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.EmpProfile", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmpId")
                        .IsRequired();

                    b.HasOne("TourProgram.DAL.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.FinanceDetail", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.ClaimType", "ClaimType")
                        .WithMany()
                        .HasForeignKey("ClaimTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClaimType");

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.LeaveDetail", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.TentativeTravelPlan", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.TransportationDetail", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpTourPlan");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.TransportationUpload", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.TransportationDetail", "TransportationDetail")
                        .WithMany()
                        .HasForeignKey("TransportationDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TransportationDetail");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.UploadDocument", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.UploadTypeDetail", "UploadTypeDetail")
                        .WithMany()
                        .HasForeignKey("UploadTypeDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UploadTypeDetail");
                });

            modelBuilder.Entity("TourProgram.DAL.Models.UploadTypeDetail", b =>
                {
                    b.HasOne("TourProgram.DAL.Models.EmpTourPlan", "EmpTourPlan")
                        .WithMany()
                        .HasForeignKey("EmpTourPlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TourProgram.DAL.Models.UploadDocType", "UploadDocType")
                        .WithMany()
                        .HasForeignKey("UploadTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmpTourPlan");

                    b.Navigation("UploadDocType");
                });
#pragma warning restore 612, 618
        }
    }
}
